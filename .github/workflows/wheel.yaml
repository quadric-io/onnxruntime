name: Release & Upload Wheel

on:
  workflow_dispatch:
  push:
    branches:
      - main
      - shayan-create-wheel-release

jobs:
  build_and_upload_wheel:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/quadric-io/tvm:devel
      options: "--mount type=bind,source=${{ github.workspace }},target=/workspace"
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    - name: Build ONNX Runtime wheel
      working-directory: /workspace
      run: |
        python3 -m pip install cmake --upgrade
        # ./build.sh --build_wheel --config Release --parallel --skip_tests --skip_submodule_sync
        mkdir -p ./build/Linux/Release/dist/
        echo "test" > ./build/Linux/Release/dist/onnxruntime-1.15.1-cp310-cp310-linux_x86_64.whl
        find . -name '*.whl' | xargs readlink -f
    - name: Count releases
      id: count_releases
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        apt-get update && apt-get install curl jq -y
        count=$(curl --request GET \
          --url https://api.github.com/repos/${{ github.repository }}/releases \
          --header "Authorization: Bearer $GITHUB_TOKEN" | jq length)
        echo "::set-output name=count::$count"
    - name: Create release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ steps.count_releases.outputs.count }}
        release_name: Release v${{ steps.count_releases.outputs.count }}
        draft: false
        prerelease: false
    - name: Upload wheel
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: /workspace/build/Linux/Release/dist/*.whl
        asset_name: onnxruntime-v${{ steps.count_releases.outputs.count }}.whl
        asset_content_type: application/octet-stream
